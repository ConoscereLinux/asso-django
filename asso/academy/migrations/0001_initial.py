# Generated by Django 4.2.5 on 2023-10-06 13:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="A short description for this content (not visible in views)",
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_removed",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Set to True to set as removed or 'soft deleted",
                        verbose_name="Is removed?",
                    ),
                ),
                (
                    "subtitle",
                    models.CharField(
                        blank=True, default="", max_length=250, verbose_name="Subtitle"
                    ),
                ),
                (
                    "need_membership",
                    models.BooleanField(
                        default=True,
                        help_text="Indicate if the membership is needed in order to attend to this event",
                        verbose_name="Membership Needed",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        help_text="The price to pay for this event (leave blank for free events)",
                        max_digits=14,
                        null=True,
                        verbose_name="Price",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name="The starting date of the first session of this event (generated from sessions)",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name="The ending date of the last session of this event (generated from sessions)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
            },
        ),
        migrations.CreateModel(
            name="EventApprovalState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="A short description for this content (not visible in views)",
                        verbose_name="Description",
                    ),
                ),
                (
                    "show",
                    models.BooleanField(
                        default=True,
                        help_text="Set to False to hide this content in views",
                        verbose_name="Show",
                    ),
                ),
                (
                    "order",
                    models.SmallIntegerField(
                        default=0,
                        help_text="Object ordering value",
                        verbose_name="Order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Approval State",
                "verbose_name_plural": "Event Approval States",
                "ordering": ["order", "-show"],
            },
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="A short description for this content (not visible in views)",
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Category",
                "verbose_name_plural": "Event Categories",
            },
        ),
        migrations.CreateModel(
            name="Trainer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_removed",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Set to True to set as removed or 'soft deleted",
                        verbose_name="Is removed?",
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="The name to display in teacher card",
                        max_length=200,
                        verbose_name="Displayed name",
                    ),
                ),
                (
                    "biography",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Trainer Biography",
                        verbose_name="Biography",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Login credentials for Trainer",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="trainers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trainer",
                "verbose_name_plural": "Trainers",
            },
        ),
        migrations.CreateModel(
            name="EventSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="A short description for this content (not visible in views)",
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_removed",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Set to True to set as removed or 'soft deleted",
                        verbose_name="Is removed?",
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(
                        help_text="The start time and date of the session",
                        verbose_name="Start datetime",
                    ),
                ),
                (
                    "end",
                    models.DateTimeField(
                        help_text="The end time and date of the session",
                        verbose_name="End datetime",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="The event who generate this session",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="academy.event",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="event",
            name="approval_state",
            field=models.ForeignKey(
                help_text="Actual approval state for this event",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="events",
                to="academy.eventapprovalstate",
                verbose_name="Approval State",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="category",
            field=models.ForeignKey(
                help_text="The event category (course, talk, ...)",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="events",
                to="academy.eventcategory",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="trainers",
            field=models.ManyToManyField(
                blank=True,
                help_text="The Trainers that present the Event",
                related_name="events",
                to="academy.trainer",
                verbose_name="Trainers",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email used for comunication regarding this event",
                        max_length=254,
                        verbose_name="Email",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Phone number used for comunication regarding this event",
                        max_length=24,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="Event related to this enrollment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="academy.event",
                        verbose_name="Event",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
