# Generated by Django 4.2.5 on 2023-10-06 03:59

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="A short description for this content (not visible in views)",
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_removed",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Set to True to set as removed or 'soft deleted",
                        verbose_name="Is removed?",
                    ),
                ),
                (
                    "subtitle",
                    models.CharField(
                        blank=True, default="", max_length=250, verbose_name="Subtitle"
                    ),
                ),
                (
                    "need_membership",
                    models.BooleanField(
                        default=True,
                        help_text="Indicate if the membership is needed in order to attend to this event",
                        verbose_name="Membership Needed",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        help_text="The price to pay for this event (leave blank for free events)",
                        max_digits=14,
                        null=True,
                        verbose_name="Price",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name="The starting date of the first session of this event (generated from sessions)",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name="The ending date of the last session of this event (generated from sessions)",
                    ),
                ),
            ],
            options={
                "ordering": ["slug"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="A short description for this content (not visible in views)",
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Category",
                "verbose_name_plural": "Event Categories",
            },
        ),
        migrations.CreateModel(
            name="EventSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="A short description for this content (not visible in views)",
                        verbose_name="Description",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_removed",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Set to True to set as removed or 'soft deleted",
                        verbose_name="Is removed?",
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(
                        help_text="The start time and date of the session",
                        verbose_name="Start datetime",
                    ),
                ),
                (
                    "end",
                    models.DateTimeField(
                        help_text="The end time and date of the session",
                        verbose_name="End datetime",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
