# Generated by Django 4.2.2 on 2023-06-19 23:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accountant", "0001_initial"),
        ("academy", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="trainer",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who has created this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creation User",
            ),
        ),
        migrations.AddField(
            model_name="trainer",
            name="edit_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who last edited this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last edit User",
            ),
        ),
        migrations.AddField(
            model_name="trainer",
            name="user",
            field=models.OneToOneField(
                blank=True,
                help_text="The User the Trainer use for Login",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who has created this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creation User",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="edit_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who last edited this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last edit User",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="event",
            field=models.ForeignKey(
                help_text="The Event of witch the Session is referred to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_sessions",
                to="academy.event",
                verbose_name="Event",
            ),
        ),
        migrations.AddField(
            model_name="presence",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who has created this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creation User",
            ),
        ),
        migrations.AddField(
            model_name="presence",
            name="edit_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who last edited this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last edit User",
            ),
        ),
        migrations.AddField(
            model_name="presence",
            name="enrollment",
            field=models.ForeignKey(
                help_text="The Enrollment of which the Presence is registered",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="enrollment_presences",
                to="academy.enrollment",
                verbose_name="Enrollment",
            ),
        ),
        migrations.AddField(
            model_name="presence",
            name="session",
            field=models.ForeignKey(
                help_text="The Session for which the Presence is registered",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="session_presences",
                to="academy.session",
                verbose_name="Session",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="approval_state",
            field=models.ForeignKey(
                help_text="It represents the state of approval of the event",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="menu_entries",
                to="academy.approvalstate",
                verbose_name="Approval State",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who has created this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creation User",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="edit_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who last edited this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last edit User",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="trainers",
            field=models.ManyToManyField(
                help_text="The Trainers that present the Event",
                related_name="trainer_events",
                to="academy.trainer",
                verbose_name="Trainers",
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="attendant",
            field=models.ForeignKey(
                help_text="The Attendant of witch the Enrollment is referred to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_attendants",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Attendant",
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who has created this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creation User",
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="edit_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who last edited this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last edit User",
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="event",
            field=models.ForeignKey(
                help_text="The Event of witch the Enrollment is referred to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_enrollments",
                to="academy.event",
                verbose_name="Event",
            ),
        ),
        migrations.AddField(
            model_name="enrollment",
            name="transaction",
            field=models.OneToOneField(
                help_text="The Event of witch the Enrollment is referred to",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transaction_enrollment",
                to="accountant.transaction",
                verbose_name="Event",
            ),
        ),
        migrations.AddField(
            model_name="approvalstate",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who has created this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Creation User",
            ),
        ),
        migrations.AddField(
            model_name="approvalstate",
            name="edit_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The User who last edited this object",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last edit User",
            ),
        ),
        migrations.AddConstraint(
            model_name="trainer",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("user__isnull", False),
                    ("display_name__length__gt", 0),
                    _connector="OR",
                ),
                name="not_both_null",
                violation_error_message="displayed name and user cannot be either unset",
            ),
        ),
    ]
